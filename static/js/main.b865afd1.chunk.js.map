{"version":3,"sources":["bg.jpg","../../src/util/common.js","../../src/components/card/Card.jsx","../../src/util/dom.js","../../src/components/background/Background.jsx","../../src/hooks/useResizeObserver.js","../../src/util/props.js","App.js","index.js"],"names":["module","exports","getModuleClasses","localModule","classNames","styles","globalModule","cl","Card","props","dark","className","blur","outlined","transparency","style","rgbColor","color","canvas","document","body","ctx","colorArray","imgData","RGBFromCSSColor","r","g","b","background","key","getClasses","Background","img","bgNode","React","element","current","observer","ResizeObserver","entries","currentWidth","currentHeight","entry","clientWidth","isHeightChanged","setWidth","setHeight","observe","unobserve","isObserverValid","height","useResizeObserver","width","ref","children","propName","child","component","componentName","type","isMyReactComponent","newProps","Array","prop","cloneElement","passDownProp","App","padding","fontSize","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b865afd1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.20644346.jpg\";","import globalModule from '../components/styles.module.css'\r\n\r\nexport const getModuleClasses = (localModule, classNames) => {\r\n  const styles = {\r\n    ...localModule,\r\n    ...globalModule\r\n  }\r\n\r\n  return classNames\r\n    .replace(/^\\s+|\\s+$/g, '')\r\n    .split(/\\s+/)\r\n    .map((cl) => styles[cl.trim()])\r\n    .join(' ')\r\n    .trim()\r\n}\r\n","import React from 'react'\r\nimport styles from './Card.module.css'\r\n\r\nimport { getModuleClasses, RGBFromCSSColor } from '../../util'\r\n\r\nconst Card = (props) => {\r\n  const {\r\n    style,\r\n    children,\r\n    dark = false,\r\n    className = '',\r\n    color,\r\n    blur = 4,\r\n    outlined = false,\r\n    transparency = 0.2\r\n  } = props\r\n\r\n  const background = () => {\r\n    const colorLight = '255, 255, 255'\r\n    const colorDark = '0, 0, 0'\r\n\r\n    let rgbColor = colorLight\r\n\r\n    if (dark) {\r\n      rgbColor = colorDark\r\n    }\r\n\r\n    if (color) {\r\n      const [r, g, b] = RGBFromCSSColor(color)\r\n\r\n      if (r === 0 && g === 0 && b === 0) {\r\n        if (dark) {\r\n          rgbColor = colorDark\r\n        } else {\r\n          rgbColor = colorLight\r\n        }\r\n      } else {\r\n        rgbColor = `${r}, ${g}, ${b}`\r\n      }\r\n    }\r\n\r\n    return `rgba(${rgbColor}, ${transparency})`\r\n  }\r\n\r\n  const getClasses = (key) => {\r\n    switch (key) {\r\n      case 'card':\r\n        return getModuleClasses(\r\n          styles,\r\n          `\r\n            gl-card \r\n            gl-card--${dark ? 'dark' : 'light'}\r\n            ${outlined ? 'gl-card--outlined' : ''}\r\n          `\r\n        )\r\n\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        ...style,\r\n        '--gl-card-blur': `${blur}px`,\r\n        '--gl-card-background': background()\r\n      }}\r\n      className={`${getClasses('card')} ${className}`}\r\n    >\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nCard.displayName = 'GuCard'\r\n\r\nexport { Card }\r\n","export const RGBFromCSSColor = (color) => {\r\n  var canvas = document.createElement('canvas')\r\n\r\n  canvas.id = 'color-canvas'\r\n  canvas.width = 2\r\n  canvas.height = 2\r\n  canvas.style.zIndex = -1\r\n  canvas.style.position = 'absolute'\r\n  canvas.style.border = '1px solid'\r\n\r\n  var body = document.getElementsByTagName('body')[0]\r\n  body.appendChild(canvas)\r\n\r\n  var ctx = canvas.getContext('2d')\r\n  ctx.fillStyle = color\r\n  ctx.fillRect(0, 0, 2, 2)\r\n\r\n  var imgData = ctx.getImageData(0, 0, 2, 2)\r\n\r\n  var colorArray = imgData.data.slice(2 * 4, 2 * 4 + 4)\r\n\r\n  document.getElementById('color-canvas').remove()\r\n\r\n  return [colorArray[0], colorArray[1], colorArray[2]]\r\n}\r\n","import React from 'react'\r\nimport styles from './Background.module.css'\r\n\r\nimport { passDownProp, getModuleClasses } from '../../util'\r\nimport { useResizeObserver } from '../../hooks'\r\n\r\nconst Background = (props) => {\r\n  const { style, children, className = '', blur = 100, img } = props\r\n\r\n  const bgNode = React.useRef(null)\r\n\r\n  const { height, width } = useResizeObserver(bgNode)\r\n\r\n  const getClasses = (key) => {\r\n    switch (key) {\r\n      default:\r\n        return getModuleClasses(styles, key)\r\n    }\r\n  }\r\n\r\n  const background = () => {\r\n    return img\r\n      ? `url(${img})`\r\n      : `linear-gradient(\r\n          90deg,\r\n          var(--gradient-left) 0%,\r\n          var(--gradient-right) 100%)\r\n        `\r\n  }\r\n\r\n  const getChildren = () => {\r\n    return passDownProp(children, props, 'dark')\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        ...style,\r\n        '--gl-background-blur': `${blur}px`,\r\n        '--gl-background-value': background(),\r\n        '--gl-background-width': `${width}px`,\r\n        '--gl-background-height': `${height}px`\r\n      }}\r\n      ref={bgNode}\r\n      className={`${getClasses('gl-background')} ${className}`}\r\n    >\r\n      {getChildren()}\r\n    </div>\r\n  )\r\n}\r\n\r\nBackground.displayName = 'GuBackground'\r\n\r\nexport { Background }\r\n","import React from 'react'\r\n\r\nexport const useResizeObserver = (element) => {\r\n  const current = element && element.current\r\n\r\n  const observer = React.useRef(null)\r\n\r\n  const [width, setWidth] = React.useState(0)\r\n  const [height, setHeight] = React.useState(0)\r\n\r\n  React.useLayoutEffect(() => {\r\n    if (observer && observer.current && current) {\r\n      observer.current.unobserve(current)\r\n    }\r\n\r\n    // eslint-disable-next-line no-undef\r\n    observer.current = new ResizeObserver((entries) => {\r\n      const currentWidth = width\r\n      const currentHeight = height\r\n\r\n      entries.forEach((entry) => {\r\n        const { clientHeight, clientWidth } = (entry && entry.target) || {}\r\n\r\n        const isWidthChanged = currentWidth !== clientWidth\r\n        const isHeightChanged = currentHeight !== clientHeight\r\n\r\n        if (isWidthChanged) {\r\n          setWidth(clientWidth)\r\n        }\r\n        if (isHeightChanged) {\r\n          setHeight(clientHeight)\r\n        }\r\n      })\r\n    })\r\n\r\n    observe()\r\n\r\n    return () => unobserve()\r\n  }, [current])\r\n\r\n  const observe = () => {\r\n    if (isObserverValid()) {\r\n      observer.current.observe(element.current)\r\n    }\r\n  }\r\n\r\n  const unobserve = () => {\r\n    if (isObserverValid()) {\r\n      observer.current.unobserve(element.current)\r\n    }\r\n  }\r\n\r\n  const isObserverValid = () => {\r\n    return element && element.current && observer.current\r\n  }\r\n\r\n  return { width, height }\r\n}\r\n","import { Children, cloneElement } from 'react'\r\n\r\nexport const isMyReactComponent = (component) => {\r\n  let componentName = ''\r\n  if (component && component.type && typeof component.type !== 'string') {\r\n    componentName = component.type.displayName\r\n  }\r\n  return componentName && componentName.includes('Gu')\r\n}\r\n\r\nexport const passDownProp = (children, props, propName) => {\r\n  return Children.map(children, (child) => {\r\n    if (isMyReactComponent(child)) {\r\n      const newProps = {\r\n        ...child.props\r\n      }\r\n\r\n      if (typeof propName === 'string') {\r\n        if (props[propName] !== undefined) {\r\n          newProps[propName] =\r\n            child.props[propName] === undefined\r\n              ? props[propName]\r\n              : child.props[propName]\r\n        }\r\n      } else if (Array.isArray(propName)) {\r\n        propName.forEach((prop) => {\r\n          if (props[prop] === undefined) return\r\n\r\n          newProps[prop] =\r\n            child.props[prop] === undefined ? props[prop] : child.props[prop]\r\n        })\r\n      }\r\n      return cloneElement(child, newProps)\r\n    } else {\r\n      return child\r\n    }\r\n  })\r\n}\r\n","import React from 'react'\n\nimport { Card, Background } from 'ui-glassmorphism'\nimport 'ui-glassmorphism/dist/index.css'\n\nimport img from './bg.jpg'\n\nconst App = () => {\n  return (\n    <Background dark={false} style={{ padding: '108px' }} img={img} blur={100}>\n      <Card\n        style={{ height: '50vh', fontSize: '40px' }}\n        transparency={0.1}\n        color='#9B9B9B'\n      >\n        HI\n      </Card>\n    </Background>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}